name: Build Executable for Multiple Platforms

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    # Set up Python for all platforms
    - name: Set up Python (Ubuntu/macOS/Windows)
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Install dependencies on Ubuntu
    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxkbcommon-x11-0 \
          libxcb-shape0 \
          libxcb-xfixes0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-render-util0 \
          libxcb-cursor0 \
          libxcb-xkb1 \
          libxcb-randr0 \
          libxkbcommon0 \
          libxcb-render0 \
          libxrender1 \
          libgl1-mesa-glx \
          build-essential \
          qtbase5-dev \
          qtchooser \
          qt5-qmake \
          qtbase5-dev-tools

    # Install dependencies for macOS and Windows using requirements.txt
    - name: Install dependencies (Ubuntu/macOS/Windows)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Build with PyInstaller for Windows
    - name: Build with PyInstaller for Windows
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name=Sortify --icon=resources/sorticon.ico SortingApp.py --runtime-tmpdir=%TEMP%\sortify_temp


    # Build with PyInstaller for macOS
    - name: Build with PyInstaller for macOS
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name=Sortify --icon=resources/sorticon.icns SortingApp.py

    # Build with PyInstaller for Ubuntu
    - name: Build with PyInstaller for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --windowed --name=Sortify --icon=resources/sorticon-256x256.png SortingApp.py

    # macOS-specific step to set executable permissions and zip the .app bundle
    - name: Set permissions and zip .app for macOS
      if: matrix.os == 'macos-latest'
      run: |
        chmod +x dist/Sortify.app/Contents/MacOS/Sortify
        cd dist
        zip -r Sortify-macOS.zip Sortify.app

    # Upload only the .zip file for macOS
    - name: Upload macOS zip
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: executable-macos
        path: dist/Sortify-macOS.zip

    # Upload all files for Ubuntu and Windows builds
    - name: Upload executable (Native Builds)
      if: matrix.os != 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: executable-${{ matrix.os }}
        path: dist/*
